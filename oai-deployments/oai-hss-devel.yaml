apiVersion: v1
kind: ServiceAccount
metadata:
  name: hss-sa
  namespace: oai
---
apiVersion: rbac.authorization.k8s.io/v1beta1
kind: ClusterRoleBinding
metadata:
  name: hss-rbac
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: cluster-admin
subjects:
- kind: ServiceAccount
  name: hss-sa
  namespace: oai
---
apiVersion: v1
data:
  db_fqdn: cassandra-0.cassandra.oai.svc.cluster.local
  db_name: vhss
  db_password: cassandra
  db_user: cassandra
  identity: oai-hss.oai.svc.cluster.local
  op_key: "00112233445566778899aabbccddeeff"
  roaming: "true"
kind: ConfigMap
metadata:
  name: hss-config
  namespace: oai
---
apiVersion: v1
data:
  hss.cacert.pem: 
  hss.cert.pem: 
  hss.key.pem: 
kind: Secret
metadata:
  name: hss-tls-secret
  namespace: oai
type: Opaque
---
apiVersion: v1
kind: Service
metadata:
  labels:
    app: oai-hss
  name: oai-hss
  namespace: oai
spec:
  clusterIP: None
  ports:
  - name: oai-hss
    port: 3868
    protocol: TCP
    targetPort: 3868
  - name: oai-hss-secure
    port: 5868
    protocol: TCP
    targetPort: 5868
  selector:
    app: oai-hss
  type: ClusterIP
---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: oai-hss
  name: oai-hss
  namespace: oai
spec:
  replicas: 1
  selector:
    matchLabels:
      app: oai-hss
  strategy:
    type: Recreate
  template:
    metadata:
      annotations:
        k8s.v1.cni.cncf.io/networks: hss-net1
      labels:
        app: oai-hss
    spec:
      nodeName: cloud-worker
      containers:
      - env:
        - name: HOSTNAME
          valueFrom:
            configMapKeyRef:
              key: identity
              name: hss-config
        - name: DB_FQDN
          valueFrom:
            configMapKeyRef:
              key: db_fqdn
              name: hss-config
        - name: DB_NAME
          valueFrom:
            configMapKeyRef:
              key: db_name
              name: hss-config
        - name: DB_USER
          valueFrom:
            configMapKeyRef:
              key: db_user
              name: hss-config
        - name: DB_PASSWORD
          valueFrom:
            configMapKeyRef:
              key: db_password
              name: hss-config
        - name: OP_KEY
          valueFrom:
            configMapKeyRef:
              key: op_key
              name: hss-config
        - name: HSS_FQDN
          valueFrom:
            configMapKeyRef:
              key: identity
              name: hss-config
        - name: ROAMING_ALLOWED
          valueFrom:
            configMapKeyRef:
              key: roaming
              name: hss-config
        image: ttsourdinis/oai-hss 
        command: ["/bin/sh", "-c"]
        args:
        - "/opt/oai-hss/bin/entrypoint.sh ; /usr/bin/sleep 2 ; /opt/oai-hss/bin/oai_hss -j /opt/oai-hss/etc/hss_rel14.json ;"
        imagePullPolicy: Never
        name: hss
        ports:
        - containerPort: 3868
          name: oai-hss
        - containerPort: 5868
          name: oai-hss-secure
        - containerPort: 9080
          name: jmx
        - containerPort: 9081
          name: cql
        volumeMounts:
        - mountPath: /opt/oai-hss/certs
          name: certs
      imagePullSecrets:
      - name: regcred
      - command:
        - /bin/sleep
        - infinity
        image: corfr/tcpdump
        name: tcpdumpoai-hss-674bfb9f4f-n49bd
      dnsPolicy: ClusterFirst
      initContainers:
      - command:
        - sh
        - -c
        - cqlsh cassandra-0.cassandra.oai.svc.cluster.local --file /root/oai_db.cql
        image: cassandra:3.11
        name: init-db
        restartPolicy: Never
        volumeMounts:
        - mountPath: /root
          name: db
      restartPolicy: Always
      schedulerName: default-scheduler
      securityContext: {}
      serviceAccountName: hss-sa
      terminationGracePeriodSeconds: 30
      volumes:
      - name: certs
        secret:
          secretName: hss-tls-secret
      - configMap:
          name: oai-db
        name: db
---
apiVersion: k8s.cni.cncf.io/v1
kind: NetworkAttachmentDefinition
metadata:
  name: hss-net1
  namespace: oai
spec:
  config: '{ "cniVersion": "0.3.0", "type": "macvlan", "master": "br0", "ipam": { "type": "static", "addresses": [ { "address": "192.168.1.102/24",
    "gateway": "192.168.1.1" } ] } }'


